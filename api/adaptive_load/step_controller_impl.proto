// Plugin-specific config protos for StepControllers.

syntax = "proto3";

package nighthawk.adaptive_load;

import "api/adaptive_load/step_controller.proto";

// Configuration for a step controller that performs an exponential search for
// the optimal value of a single Nighthawk input variable (e.g. RPS).
// Exponential search starts with the input set to |initial_value| and increases
// the input by |exponential_factor| until a metric fails the threshold, then
// performs a binary search with input values between X/2 and X, where X is the
// input value where the metric failed the threshold.
message ExponentialSearchStepControllerConfig {
  // Selects a plugin that knows how to apply a numeric value generated by the
  // StepController within CommandLineOptions. For RPS, use name: "rps", leaving
  // typed_config unset.
  InputVariableSetterConfig input_variable_setter = 1;
  // Initial value of the input variable that should be attempted.
  int64 initial_value = 2;
  // Factor to increase the input variable during the exponential phase. Typical
  // value: 2.0.
  double exponential_factor = 3;
}

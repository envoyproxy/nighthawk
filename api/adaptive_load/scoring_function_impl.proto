// Plugin-specific config protos for ScoringFunctions.

syntax = "proto3";

package nighthawk.adaptive_load;

// Configuration for a linear ScoringFunction that calculates a metric score
// as k * (threshold - value), where k is a scaling constant. The score is 0.0
// when the value exactly equals the threshold, positive below the threshold
// (meaning input should ramp up), and negative above the threshold. The score is
// proportional to the difference from the threshold.
message LinearScoringFunctionConfig {
  // The target value of the metric.
  double threshold = 1;
  // Scaling constant: k in k * (threshold - value). Use this in combination
  // with step controller constants to produce reasonable input increments for
  // reasonable differences from the threshold.
  double k = 2;
}

// Configuration for a ScoringFunction that calculates a metric score
// as 1 - 2 / (1 + exp(-k(value - threshold))), an upside-down sigmoid curve
// centered on a threshold. The output is 0.0 when the metric equals the
// threshold, approaches 1.0 for values far below the threshold, and approaches
// -1.0 for values far above the threshold.
message SigmoidScoringFunctionConfig {
  // The target value of the metric.
  double threshold = 1;
  // Tuning constant: k in 1 - 2 / (1 + exp(-k(value - threshold))). k should
  // be around the same size as 1/threshold.
  double k = 2;
}
